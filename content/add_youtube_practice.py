#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–¥–Ω–æ–π –π–æ–≥–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
"""

import sys
import os
import re
from urllib.parse import urlparse, parse_qs

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é app –≤ sys.path
sys.path.append(os.path.join(os.path.dirname(__file__), 'app'))

from app.db import add_yoga_practice, get_practice_count, weekday_to_name


def extract_video_id(url):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç ID –≤–∏–¥–µ–æ –∏–∑ YouTube URL."""
    parsed_url = urlparse(url)
    
    if parsed_url.hostname in ('www.youtube.com', 'youtube.com'):
        if parsed_url.path == '/watch':
            return parse_qs(parsed_url.query).get('v', [None])[0]
        elif parsed_url.path.startswith('/embed/'):
            return parsed_url.path.split('/')[2]
    elif parsed_url.hostname == 'youtu.be':
        return parsed_url.path[1:]
    
    return None


def get_youtube_data(url):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ —Å YouTube."""
    try:
        import yt_dlp
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è yt-dlp
        ydl_opts = {
            'quiet': True,
            'no_warnings': True,
            'extract_flat': False,
        }
        
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
            info = ydl.extract_info(url, download=False)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            title = info.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            channel_name = info.get('uploader', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª')
            description = info.get('description', '')[:1000]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è
            duration_seconds = info.get('duration', 0)
            duration_minutes = duration_seconds // 60 if duration_seconds else 0
            
            return {
                'title': title,
                'channel_name': channel_name,
                'description': description,
                'time_practices': duration_minutes
            }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å YouTube: {e}")
        return None


def get_weekday_input():
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    print("\nüìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:")
    print("1. –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
    print("2. –í—Ç–æ—Ä–Ω–∏–∫") 
    print("3. –°—Ä–µ–¥–∞")
    print("4. –ß–µ—Ç–≤–µ—Ä–≥")
    print("5. –ü—è—Ç–Ω–∏—Ü–∞")
    print("6. –°—É–±–±–æ—Ç–∞")
    print("7. –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ")
    print("0. –õ—é–±–æ–π –¥–µ–Ω—å (–Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å)")
    
    while True:
        try:
            choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (0-7): ").strip()
            if choice == '0':
                return None
            elif choice in ['1', '2', '3', '4', '5', '6', '7']:
                return int(choice)
            else:
                print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 7!")
        except ValueError:
            print("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!")


def add_practice_from_youtube():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫—É –∏–∑ YouTube —Å—Å—ã–ª–∫–∏."""
    
    print("üßò‚Äç‚ôÄÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –π–æ–≥–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏–∑ YouTube")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    while True:
        video_url = input("üîó –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ: ").strip()
        
        if not video_url:
            print("‚ùå –°—Å—ã–ª–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π!")
            continue
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ YouTube —Å—Å—ã–ª–∫–∞
        video_id = extract_video_id(video_url)
        if not video_id:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube –≤–∏–¥–µ–æ!")
            continue
            
        break
    
    print(f"\nüì° –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å YouTube...")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å YouTube
    youtube_data = get_youtube_data(video_url)
    if not youtube_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å YouTube. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Å—ã–ª–∫—É.")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print("\nüìã –î–∞–Ω–Ω—ã–µ —Å YouTube:")
    print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {youtube_data['title']}")
    print(f"   –ö–∞–Ω–∞–ª: {youtube_data['channel_name']}")
    print(f"   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {youtube_data['time_practices']} –º–∏–Ω—É—Ç")
    print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {youtube_data['description'][:100]}...")
    
    # –ü–æ–ª—É—á–∞–µ–º –º–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    my_description = input("\nüìù –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ): ").strip()
    if not my_description:
        my_description = None
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
    weekday = get_weekday_input()
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print(f"\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ:")
    print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {youtube_data['title']}")
    print(f"   –°—Å—ã–ª–∫–∞: {video_url}")
    print(f"   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {youtube_data['time_practices']} –º–∏–Ω—É—Ç")
    print(f"   –ö–∞–Ω–∞–ª: {youtube_data['channel_name']}")
    if my_description:
        print(f"   –ú–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {my_description}")
    if weekday:
        print(f"   –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {weekday_to_name(weekday)}")
    else:
        print(f"   –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: –õ—é–±–æ–π –¥–µ–Ω—å")
    
    confirm = input("\n‚úÖ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É? (y/n): ").lower().strip()
    if confirm in ['y', 'yes', '–¥–∞', '–¥']:
        success = add_yoga_practice(
            title=youtube_data['title'],
            video_url=video_url,
            time_practices=youtube_data['time_practices'],
            channel_name=youtube_data['channel_name'],
            description=youtube_data['description'],
            my_description=my_description,
            weekday=weekday
        )
        
        if success:
            print("üéâ –ü—Ä–∞–∫—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–∞–∫—Ç–∏–∫–∏. –í–æ–∑–º–æ–∂–Ω–æ, –≤–∏–¥–µ–æ —Å —Ç–∞–∫–∏–º URL —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    else:
        print("‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")


def show_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    print("=" * 30)
    
    count = get_practice_count()
    print(f"   –í—Å–µ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫: {count}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üßò‚Äç‚ôÄÔ∏è –ú–µ–Ω–µ–¥–∂–µ—Ä –π–æ–≥–∞ –ø—Ä–∞–∫—Ç–∏–∫ —Å YouTube")
    print("=" * 40)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üìù –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É –∏–∑ YouTube")
        print("2. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("3. üö™ –í—ã–π—Ç–∏")
        
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-3): ").strip()
        
        if choice == '1':
            add_practice_from_youtube()
        elif choice == '2':
            show_statistics()
        elif choice == '3':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


if __name__ == "__main__":
    main()
