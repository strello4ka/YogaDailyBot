#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –Ω–æ–≤–∏—á–∫–æ–≤.
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from data.db import (
    init_database,
    add_newbie_practice,
    get_newbie_practice_by_number,
    get_newbie_practice_count,
    get_max_newbie_practice_number,
    save_user_time,
    get_user_time,
    get_user_week,
    update_user_week,
    get_current_weekday
)


def test_database_initialization():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    try:
        init_database()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False


def test_newbie_practice_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏ –Ω–æ–≤–∏—á–∫–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∞–∫—Ç–∏–∫ –Ω–æ–≤–∏—á–∫–æ–≤...")
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
        test_practices = [
            {
                'title': '–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ 1',
                'video_url': 'https://www.youtube.com/watch?v=test1',
                'duration_minutes': 15,
                'channel_name': 'Test Channel',
                'description': '–ü–µ—Ä–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤',
                'number_practices': 1
            },
            {
                'title': '–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ 2',
                'video_url': 'https://www.youtube.com/watch?v=test2',
                'duration_minutes': 20,
                'channel_name': 'Test Channel',
                'description': '–í—Ç–æ—Ä–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤',
                'number_practices': 2
            }
        ]
        
        for practice in test_practices:
            success = add_newbie_practice(**practice)
            if success:
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞: {practice['title']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–∫—Ç–∏–∫–∏: {practice['title']}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫
        practices_1 = get_newbie_practice_by_number(1)
        practices_2 = get_newbie_practice_by_number(2)
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∞–∫—Ç–∏–∫ —Å –Ω–æ–º–µ—Ä–æ–º 1: {len(practices_1)}")
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∞–∫—Ç–∏–∫ —Å –Ω–æ–º–µ—Ä–æ–º 2: {len(practices_2)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        count = get_newbie_practice_count()
        max_number = get_max_newbie_practice_number()
        
        print(f"‚úÖ –í—Å–µ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫ –Ω–æ–≤–∏—á–∫–æ–≤: {count}")
        print(f"‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏: {max_number}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∞–∫—Ç–∏–∫ –Ω–æ–≤–∏—á–∫–æ–≤: {e}")
        return False


def test_user_week_functions():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–µ–¥–µ–ª—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user_id = 999999999
        test_chat_id = 999999999
        test_time = "09:00"
        test_name = "Test User"
        current_weekday = get_current_weekday()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–Ω–µ–º –Ω–µ–¥–µ–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        success = save_user_time(test_user_id, test_chat_id, test_time, test_name, onboarding_weekday=current_weekday)
        if success:
            print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω —Å –¥–Ω–µ–º –Ω–µ–¥–µ–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {current_weekday}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = get_user_time(test_user_id)
        if user_data:
            chat_id, notify_time, user_name, user_phone, user_days, user_week, onboarding_weekday = user_data
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã:")
            print(f"   - Chat ID: {chat_id}")
            print(f"   - –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notify_time}")
            print(f"   - –ò–º—è: {user_name}")
            print(f"   - –î–Ω–∏: {user_days}")
            print(f"   - –ù–µ–¥–µ–ª—è: {user_week}")
            print(f"   - –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {onboarding_weekday}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏
        success = update_user_week(test_user_id, 2)
        if success:
            print("‚úÖ –ù–µ–¥–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ 2")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ–¥–µ–ª–∏")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –Ω–µ–¥–µ–ª—é
        user_week = get_user_week(test_user_id)
        print(f"‚úÖ –¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_week}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return False


def test_practice_number_calculation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤."""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
        test_scenarios = [
            (1, 1, 1),  # –ù–µ–¥–µ–ª—è 1, –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (7), –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∞ 1
            (1, 2, 2),  # –ù–µ–¥–µ–ª—è 1, –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (1), –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∞ 2
            (2, 1, 8),  # –ù–µ–¥–µ–ª—è 2, –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (7), –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∞ 8
            (2, 2, 9),  # –ù–µ–¥–µ–ª—è 2, –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ (1), –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∞ 9
            (4, 7, 28), # –ù–µ–¥–µ–ª—è 4, –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ (7), –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–∞–∫—Ç–∏–∫–∞ 28
        ]
        
        for user_week, onboarding_weekday, expected_practice in test_scenarios:
            # –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–º–µ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏: (–Ω–µ–¥–µ–ª—è - 1) * 7 + –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            calculated_practice = (user_week - 1) * 7 + onboarding_weekday
            print(f"   –ù–µ–¥–µ–ª—è {user_week}, –¥–µ–Ω—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ {onboarding_weekday}: –ø—Ä–∞–∫—Ç–∏–∫–∞ {calculated_practice} (–æ–∂–∏–¥–∞–ª–æ—Å—å {expected_practice})")
            
            if calculated_practice == expected_practice:
                print(f"   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ")
            else:
                print(f"   ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ")
                return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏: {e}")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üßò‚Äç‚ôÄÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏ –Ω–æ–≤–∏—á–∫–æ–≤")
    print("=" * 50)
    
    tests = [
        test_database_initialization,
        test_newbie_practice_functions,
        test_user_week_functions,
        test_practice_number_calculation
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        if test():
            passed += 1
        print()
    
    print("=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
        return False


if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)

