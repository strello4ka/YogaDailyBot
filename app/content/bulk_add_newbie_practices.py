#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –π–æ–≥–∞ –ø—Ä–∞–∫—Ç–∏–∫ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –∏–∑ CSV —Ñ–∞–π–ª–∞.
"""

import sys
import os
import csv
from urllib.parse import urlparse, parse_qs

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))

from data.db import add_newbie_practice, get_newbie_practice_count, get_max_newbie_practice_number


def extract_video_id(url):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç ID –≤–∏–¥–µ–æ –∏–∑ YouTube URL."""
    parsed_url = urlparse(url)
    
    if parsed_url.hostname in ('www.youtube.com', 'youtube.com'):
        if parsed_url.path == '/watch':
            return parse_qs(parsed_url.query).get('v', [None])[0]
        elif parsed_url.path.startswith('/embed/'):
            return parsed_url.path.split('/')[2]
    elif parsed_url.hostname == 'youtu.be':
        return parsed_url.path[1:]
    
    return None


def get_youtube_data(url):
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ —Å YouTube."""
    try:
        import yt_dlp
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è yt-dlp
        ydl_opts = {
            'quiet': True,
            'no_warnings': True,
            'extract_flat': False,
        }
        
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
            info = ydl.extract_info(url, download=False)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            title = info.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
            channel_name = info.get('uploader', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª')
            description = info.get('description', '')[:1000]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è
            duration_seconds = info.get('duration', 0)
            duration_minutes = duration_seconds // 60 if duration_seconds else 0
            
            return {
                'title': title,
                'channel_name': channel_name,
                'description': description,
                'duration_minutes': duration_minutes
            }
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å YouTube: {e}")
        return None


def create_csv_template():
    """–°–æ–∑–¥–∞–µ—Ç —à–∞–±–ª–æ–Ω CSV —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è."""
    csv_file = os.path.join(os.path.dirname(__file__), 'newbie_practices.csv')
    
    with open(csv_file, 'w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏
        writer.writerow([
            'video_url',
            'description', 
            'number_practices'
        ])
        
        # –ü—Ä–∏–º–µ—Ä—ã —Å—Ç—Ä–æ–∫
        writer.writerow([
            'https://www.youtube.com/watch?v=example1',
            '–ü–µ—Ä–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ - –æ—Å–Ω–æ–≤—ã –¥—ã—Ö–∞–Ω–∏—è',
            '1'
        ])
        writer.writerow([
            'https://www.youtube.com/watch?v=example2',
            '–í—Ç–æ—Ä–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ - –ø—Ä–æ—Å—Ç—ã–µ –∞—Å–∞–Ω—ã',
            '1'
        ])
        writer.writerow([
            'https://www.youtube.com/watch?v=example3',
            '–¢—Ä–µ—Ç—å—è –ø—Ä–∞–∫—Ç–∏–∫–∞ - —Ä–∞—Å—Ç—è–∂–∫–∞',
            '2'
        ])
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω —Ñ–∞–π–ª–∞: {csv_file}")
    print("üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–∞–π–ª —Å–≤–æ–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
    print("   - video_url: —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube –≤–∏–¥–µ–æ")
    print("   - description: –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)")
    print("   - number_practices: –Ω–æ–º–µ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ (1-28 –¥–ª—è 4 –Ω–µ–¥–µ–ª—å)")
    print("\nüí° –ù–æ–º–µ—Ä–∞ –ø—Ä–∞–∫—Ç–∏–∫:")
    print("   - 1-7: –ø–µ—Ä–≤–∞—è –Ω–µ–¥–µ–ª—è")
    print("   - 8-14: –≤—Ç–æ—Ä–∞—è –Ω–µ–¥–µ–ª—è")
    print("   - 15-21: —Ç—Ä–µ—Ç—å—è –Ω–µ–¥–µ–ª—è")
    print("   - 22-28: —á–µ—Ç–≤–µ—Ä—Ç–∞—è –Ω–µ–¥–µ–ª—è")


def process_csv_file(csv_file):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç CSV —Ñ–∞–π–ª –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."""
    
    if not os.path.exists(csv_file):
        print(f"‚ùå –§–∞–π–ª {csv_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"üìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {csv_file}")
    print("=" * 50)
    
    added_count = 0
    error_count = 0
    
    with open(csv_file, 'r', encoding='utf-8') as file:
        reader = csv.DictReader(file)
        
        for row_num, row in enumerate(reader, 1):
            print(f"\nüìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É {row_num}...")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ CSV
            video_url = row.get('video_url', '').strip()
            description = row.get('description', '').strip()
            number_practices_str = row.get('number_practices', '').strip()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            if not video_url:
                print(f"‚ùå –°—Ç—Ä–æ–∫–∞ {row_num}: –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–Ω–µ—Ç —Å—Å—ã–ª–∫–∏)")
                error_count += 1
                continue
            
            if not number_practices_str:
                print(f"‚ùå –°—Ç—Ä–æ–∫–∞ {row_num}: –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–Ω–µ—Ç –Ω–æ–º–µ—Ä–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏)")
                error_count += 1
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º YouTube —Å—Å—ã–ª–∫—É
            video_id = extract_video_id(video_url)
            if not video_id:
                print(f"‚ùå –°—Ç—Ä–æ–∫–∞ {row_num}: –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube")
                error_count += 1
                continue
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏
            try:
                number_practices = int(number_practices_str)
                if number_practices < 1 or number_practices > 28:
                    print(f"‚ùå –°—Ç—Ä–æ–∫–∞ {row_num}: –Ω–æ–º–µ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 28")
                    error_count += 1
                    continue
            except ValueError:
                print(f"‚ùå –°—Ç—Ä–æ–∫–∞ {row_num}: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ –ø—Ä–∞–∫—Ç–∏–∫–∏")
                error_count += 1
                continue
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å YouTube
            print(f"üì° –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å YouTube...")
            youtube_data = get_youtube_data(video_url)
            if not youtube_data:
                print(f"‚ùå –°—Ç—Ä–æ–∫–∞ {row_num}: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å YouTube")
                error_count += 1
                continue
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {youtube_data['title']}")
            print(f"   –ö–∞–Ω–∞–ª: {youtube_data['channel_name']}")
            print(f"   –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {youtube_data['duration_minutes']} –º–∏–Ω—É—Ç")
            if description:
                print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {description}")
            print(f"   –ù–æ–º–µ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏: {number_practices}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            success = add_newbie_practice(
                title=youtube_data['title'],
                video_url=video_url,
                duration_minutes=youtube_data['duration_minutes'],
                channel_name=youtube_data['channel_name'],
                description=description if description else youtube_data['description'],
                number_practices=number_practices
            )
            
            if success:
                print(f"‚úÖ –°—Ç—Ä–æ–∫–∞ {row_num}: —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
                added_count += 1
            else:
                print(f"‚ùå –°—Ç—Ä–æ–∫–∞ {row_num}: –æ—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è (–≤–æ–∑–º–æ–∂–Ω–æ, –¥—É–±–ª–∏–∫–∞—Ç)")
                error_count += 1
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "=" * 50)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {added_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {error_count}")
    print(f"üìà –í—Å–µ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫ –Ω–æ–≤–∏—á–∫–æ–≤ –≤ –±–∞–∑–µ: {get_newbie_practice_count()}")


def show_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–∞–∫—Ç–∏–∫–∞–º –Ω–æ–≤–∏—á–∫–æ–≤."""
    total_count = get_newbie_practice_count()
    max_number = get_max_newbie_practice_number()
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∞–∫—Ç–∏–∫ –Ω–æ–≤–∏—á–∫–æ–≤:")
    print(f"   –í—Å–µ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫: {total_count}")
    print(f"   –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–∞–∫—Ç–∏–∫–∏: {max_number}")
    
    if max_number > 0:
        weeks = (max_number + 6) // 7  # –û–∫—Ä—É–≥–ª—è–µ–º –≤–≤–µ—Ä—Ö
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–µ–ª—å: {weeks}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –Ω–µ–¥–µ–ª—è–º
        print("\nüìÖ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –Ω–µ–¥–µ–ª—è–º:")
        for week in range(1, weeks + 1):
            start_practice = (week - 1) * 7 + 1
            end_practice = min(week * 7, max_number)
            print(f"   –ù–µ–¥–µ–ª—è {week}: –ø—Ä–∞–∫—Ç–∏–∫–∏ {start_practice}-{end_practice}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üßò‚Äç‚ôÄÔ∏è –ú–∞—Å—Å–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –π–æ–≥–∞ –ø—Ä–∞–∫—Ç–∏–∫ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤")
    print("=" * 50)
    
    while True:
        print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. üìù –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω CSV —Ñ–∞–π–ª–∞")
        print("2. üìÅ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å CSV —Ñ–∞–π–ª")
        print("3. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("4. üö™ –í—ã–π—Ç–∏")
        
        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ").strip()
        
        if choice == '1':
            create_csv_template()
        elif choice == '2':
            csv_file = input("üìÅ –í–≤–µ–¥–∏—Ç–µ –∏–º—è CSV —Ñ–∞–π–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é newbie_practices.csv): ").strip()
            if not csv_file:
                csv_file = os.path.join(os.path.dirname(__file__), 'newbie_practices.csv')
            process_csv_file(csv_file)
        elif choice == '3':
            show_statistics()
        elif choice == '4':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


if __name__ == "__main__":
    main()

